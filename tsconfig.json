{
    "compilerOptions": {
      /* Basic Options */
      "target": "ES2019",                             /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', 'ES2021', or 'ESNEXT'. */
      "module": "commonjs",                           /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */
      "allowJs": true,                                /* Allow javascript files to be compiled. */
      "outDir": "./bin",                              /* Redirect output structure to the directory. */
      "rootDir": ".",                                 /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */
      "resolveJsonModule": true,

      /* Strict Type-Checking Options */
      "strict": true,                                 /* Enable all strict type-checking options. */

      /* Module Resolution Options */
      "moduleResolution": "node",                     /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
      "baseUrl": ".",                                 /* Base directory to resolve non-absolute module names. */
      "paths": {                                      /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
        "@app/*":    ["src/*"],
        "@config/*": ["cfg/*"]
      },
      "esModuleInterop": true,                        /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
      /* Experimental Options */
      "experimentalDecorators": true,                 /* Enables experimental support for ES7 decorators. */
      /* Advanced Options */
      "skipLibCheck": true,                           /* Skip type checking of declaration files. */
      "forceConsistentCasingInFileNames": true        /* Disallow inconsistently-cased references to the same file. */
    },
    "include": [
      "./src",
      "./server"
  ],
}